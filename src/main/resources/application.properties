spring.application.name=Wallet_Service
server.port=8082

# Datasource
spring.datasource.url=jdbc:postgresql://wallet-postgres:5432/postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
logging.level.org.hibernate.orm.connections.pooling=WARN

# JPA / Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.database=POSTGRESQL
spring.jpa.properties.hibernate.format_sql=false

# JWT
jwt.secret=${JWT_SECRET}
gateway.secret=${GATEWAY_SECRET}

# Service-to-service authentication
service.secret=${SERVICE_SECRET}

# ========================================
# Actuator & Observability Configuration
# ========================================

# Expose tous les endpoints Actuator (pour dev/test)
management.endpoints.web.exposure.include=*

# Port dédié pour les métriques (optionnel, sinon utilise le même port)
management.server.port=8082

# Activer les métriques détaillées
management.metrics.enable.all=true
management.prometheus.metrics.export.enabled=true

# Activer les histogrammes pour les percentiles (p95, p99)
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.slo.http.server.requests=10ms,50ms,100ms,200ms,500ms,1s,2s

# Health check détaillé
management.endpoint.health.show-details=always
management.health.defaults.enabled=true

# Logs structurés (JSON pour faciliter l'analyse)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.level.root=INFO
logging.level.com.brokerx.gateway_service=DEBUG

# Tags custom pour identifier le service dans Prometheus
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=local
